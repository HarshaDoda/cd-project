pipeline {
    agent any
    tools {
        maven 'Maven mvnd'       // Ensure this matches Jenkins Maven tool name
        jdk 'JDK 21'              // Ensure this matches Jenkins JDK tool name
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/HarshaDoda/cd-project.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('SonarQube Analysis') {
            environment {
                SONARQUBE = credentials('sonarqube-token') // Token stored in Jenkins credentials
            }
            steps {
                withSonarQubeEnv('My SonarQube') {
                    sh """
                        mvn sonar:sonar \
                          -Dsonar.projectKey=sonar_harsha_project \
                          -Dsonar.host.url=http://192.168.1.39:9002 \
                          -Dsonar.login=$SONARQUBE
                    """
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}

// pipeline {
//     agent any

//     environment {
//         IMAGE_NAME = 'dodaharsha/cd-app'
//     }

//     stages {
//         stage('Checkout') {
//             steps {
//                 git branch: 'main', url: 'https://github.com/HarshaDoda/cd-project.git'
//             }
//         }

//         stage('Install Dependencies') {
//             steps {
//                 dir('app') {
//                     bat 'npm install'
//                 }
//             }
//         }

//         stage('Run Tests') {
//             steps {
//                 dir('app') {
//                     bat 'npm test'
//                 }
//             }
//         }

//         stage('Build Docker Image') {
//             steps {
//                 dir('app') {
//                     bat "docker build -t %IMAGE_NAME% ."
//                 }
//             }
//         }

//         stage('Push Image') {
//             steps {
//                 withCredentials([usernamePassword(credentialsId: 'dockerhub-creds',
//                         usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
//                     bat '''
//                     echo %DOCKER_PASS% | docker login -u %DOCKER_USER% --password-stdin
//                     docker push %IMAGE_NAME%
//                     '''
//                 }
//             }
//         }

//         stage('Deploy via Helm') {
//             steps {
//                 bat 'helm upgrade --install myapp ./helm/myapp --set image.repository=%IMAGE_NAME%'
//             }
//         }
//     }

//     // post {
//     //     success {
//     //         slackSend(channel: '#devops-alerts', message: "✅ Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}")
//     //     }
//     //     failure {
//     //         slackSend(channel: '#devops-alerts', message: "❌ Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}")
//     //     }
//     // }
// }
