pipeline {
    agent any
    tools {
        maven 'Maven mvnd'   // Must match the Maven name in Jenkins Global Tool Config
        jdk 'JDK 21'         // Must match the JDK name in Jenkins Global Tool Config
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/HarshaDoda/cd-project.git'
            }
        }

        stage('Build') {
            steps {
                bat 'mvn clean install'
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONARQUBE = credentials('sonarqube-token') // Store token in Jenkins credentials
            }
            steps {
                // "My SonarQube" must match the SonarQube server name in Jenkins config
                withSonarQubeEnv('My SonarQube') {
                    bat """
                        mvn sonar:sonar \
                          -Dsonar.projectKey=sonar_harsha_project \
                          -Dsonar.host.url=http://192.168.1.39:9002 \
                          -Dsonar.login=$SONARQUBE
                    """
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
